
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОбъектДоступа", ОбъектДоступа);
	
	Если НЕ ЗначениеЗаполнено(ОбъектДоступа) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	ИнициализироватьПараметрыДоступаНаСервере(Отказ);
	ПрочитатьПараметрыДоступаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПараметрыДоступаНаСервере(Отказ)
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ОбъектДоступа);
	
	ПараметрыДоступаТаблица = Новый ТаблицаЗначений;
	ПараметрыДоступаТаблица.Колонки.Добавить("Имя", ОбщегоНазначения.ОписаниеТипаСтрока(75));
	ПараметрыДоступаТаблица.Колонки.Добавить("Синоним", ОбщегоНазначения.ОписаниеТипаСтрока(75));
	ПараметрыДоступаТаблица.Колонки.Добавить("НеСчитыватьДанные", Новый ОписаниеТипов("Булево"));
	ПараметрыДоступаТаблица.Колонки.Добавить("РежимПароля", Новый ОписаниеТипов("Булево"));
	ПараметрыДоступаТаблица.Колонки.Добавить("ОписаниеТипа", Новый ОписаниеТипов("ОписаниеТипов"));
	
	МенеджерОбъекта.ЗаполнитьОписаниеПараметровДоступа(ПараметрыДоступаТаблица);
	
	Если ПараметрыДоступаТаблица.Количество() = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
	НовыеПараметрыДоступа = Новый Массив;
	
	Для Каждого СтрокаПараметровДоступа ИЗ ПараметрыДоступаТаблица Цикл
		
		ОписаниеПараметра = Новый Структура();
		ОписаниеПараметра.Вставить("Имя",				СтрокаПараметровДоступа.Имя);
		ОписаниеПараметра.Вставить("Синоним",			СтрокаПараметровДоступа.Синоним);
		ОписаниеПараметра.Вставить("НеСчитыватьДанные",	СтрокаПараметровДоступа.НеСчитыватьДанные);
		ОписаниеПараметра.Вставить("РежимПароля",		СтрокаПараметровДоступа.РежимПароля);
		ОписаниеПараметра.Вставить("ОписаниеТипа",		СтрокаПараметровДоступа.ОписаниеТипа);
		
		//ОписаниеПараметра.Вставить("ЗначениеПараметра",	Неопределено);
		//ОписаниеПараметра.Вставить("ПараметрИзменен",	Ложь);
		
		НовыеПараметрыДоступа.Добавить(ОписаниеПараметра);
		
	КонецЦикла;
	
	ПараметрыДоступа = Новый ФиксированныйМассив(НовыеПараметрыДоступа);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПараметрыДоступаНаСервере()
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	Для Каждого ОписаниеПараметра ИЗ ПараметрыДоступа Цикл
		
		Если ЗначениеЗаполнено(ОписаниеПараметра.ОписаниеТипа) Тогда
			ОписаниеТипаПараметра = ОписаниеПараметра.ОписаниеТипа;
		Иначе
			ОписаниеТипаПараметра = ОбщегоНазначения.ОписаниеТипаСтрока(75);
		КонецЕсли;
		РеквизитФормы = Новый РеквизитФормы(ОписаниеПараметра.Имя, ОписаниеТипаПараметра, , ОписаниеПараметра.Синоним, Ложь);
		
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
		
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	Для Каждого ОписаниеПараметра ИЗ ПараметрыДоступа Цикл
		
		Если НЕ ОписаниеПараметра.НеСчитыватьДанные Тогда
			ЭтаФорма[ОписаниеПараметра.Имя] = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(ОбъектДоступа, ОписаниеПараметра.Имя);
		КонецЕсли;
		
		ПолеВвода = СоздатьПолеВвода(ЭтаФорма, ОписаниеПараметра.Имя, , ОписаниеПараметра.РежимПароля);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрДоступаНаСервере(ИмяПараметра, ЗначениеПараметра)
	
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ОбъектДоступа, ЗначениеПараметра, ИмяПараметра);
	
КонецПроцедуры

Функция СоздатьПолеВвода(Родитель, ИмяРеквизита, ОбязательноеЗаполнение = Ложь, РежимПароля = Ложь)
	
	//ЗаголовокСлева = ЗаголовокСлева(ПараметрыКонтактнойИнформации.ПоложениеЗаголовка);
	Элемент = ЭтаФорма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Родитель);
	Элемент.ПутьКДанным = ИмяРеквизита;
	Элемент.Вид = ВидПоляФормы.ПолеВвода;
	
	//Элемент.РастягиватьПоГоризонтали = Истина;
	Элемент.АвтоМаксимальнаяШирина = Ложь;
	
	//Элемент.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
	//Элемент.РастягиватьПоГоризонтали = Ложь;
	//Элемент.РастягиватьПоВертикали = Ложь;
	//Элемент.ВысотаЗаголовка = 2;
	
	//Элемент.Высота = 1;
	//Элемент.Ширина = 50;
	
	//Элемент.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	
	Элемент.РежимПароля = РежимПароля;
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;
	
	Если ОбязательноеЗаполнение И Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
		Элемент.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
	Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_ПараметрДоступаПриИзменении");
	
	Возврат Элемент;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПараметрДоступаПриИзменении(Элемент)
	
	Подключаемый_ПараметрДоступаПриИзмененииНаСервере(Элемент.Имя);
	//Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ПараметрДоступаПриИзмененииНаСервере(ИмяРеквизита)
	
	ЗначениеПараметра = ЭтаФорма[ИмяРеквизита];
	ЗаписатьПараметрДоступаНаСервере(ИмяРеквизита, ЗначениеПараметра);
	
КонецПроцедуры



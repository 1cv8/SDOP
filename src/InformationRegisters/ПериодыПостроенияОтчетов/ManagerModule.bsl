
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаполнитьПериодыПостроенияОтчетов(График, ДатаНачала = Неопределено, ДатаОкончания = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(График) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеГрафика = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(График, "ДатаНачала, ДлинаПериодаВСек");
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		
		ДатаНачала = ДанныеГрафика.ДатаНачала;
		Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
			ДатаНачала = НачалоГода(ДатаНачала);
		КонецЕсли;
		
		УдалитьЗаписиДоДаты(График, ДатаНачала);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
		ДатаОкончания = КонецГода(ТекущаяДата());
		ДатаОкончания = Макс(ДатаОкончания, КонецМесяца(ДобавитьМесяц(ТекущаяДата(), 3)));
	КонецЕсли;
	
	Если ДлинаПериодаВСекВРегистре(График) <> ДанныеГрафика.ДлинаПериодаВСек Тогда
		УдалитьЗаписиДоДаты(График, ДатаОкончания+1);
	КонецЕсли;
	
	ТЧПериодов = ТЧПериодов(График, ДатаНачала, ДатаОкончания);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("График", График);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("ТЧПериодов", ТЧПериодов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&График КАК График,
	|	ТЧПериодов.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ТЧПериодов.ДатаОкончанияПериода КАК ДатаОкончанияПериода
	|ПОМЕСТИТЬ ВТ_ДатыКЗаписи
	|ИЗ
	|	&ТЧПериодов КАК ТЧПериодов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачалаПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыПостроенияОтчетов.График КАК График,
	|	ПериодыПостроенияОтчетов.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ПериодыПостроенияОтчетов.ДатаОкончанияПериода КАК ДатаОкончанияПериода
	|ПОМЕСТИТЬ ВТ_ДатыВБазе
	|ИЗ
	|	РегистрСведений.ПериодыПостроенияОтчетов КАК ПериодыПостроенияОтчетов
	|ГДЕ
	|	ПериодыПостроенияОтчетов.График = &График
	|	И ПериодыПостроенияОтчетов.Дата >= &ДатаНачала
	|	И ПериодыПостроенияОтчетов.Дата <= &ДатаОкончания
	|	И ПериодыПостроенияОтчетов.ДатаНачалаПериода <= &ДатаОкончания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДатаНачалаПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.График КАК График,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.ДатаНачалаПериода, ДЕНЬ) КАК Дата,
	|	ВложенныйЗапрос.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ВложенныйЗапрос.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|	СУММА(ВложенныйЗапрос.Признак) КАК Признак
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ДатыКЗаписи.График КАК График,
	|		ВТ_ДатыКЗаписи.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|		ВТ_ДатыКЗаписи.ДатаОкончанияПериода КАК ДатаОкончанияПериода,
	|		1 КАК Признак
	|	ИЗ
	|		ВТ_ДатыКЗаписи КАК ВТ_ДатыКЗаписи
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_ДатыВБазе.График,
	|		ВТ_ДатыВБазе.ДатаНачалаПериода,
	|		ВТ_ДатыВБазе.ДатаОкончанияПериода,
	|		-1
	|	ИЗ
	|		ВТ_ДатыВБазе КАК ВТ_ДатыВБазе) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.График,
	|	ВложенныйЗапрос.ДатаНачалаПериода,
	|	ВложенныйЗапрос.ДатаОкончанияПериода,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.ДатаНачалаПериода, ДЕНЬ)
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Признак) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	График,
	|	ДатаНачалаПериода";
	
	Сч = 0;
	НачатьТранзакцию();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Сч = Сч + 1;
		Если Сч % 200 = 0 Тогда
			ЗафиксироватьТранзакцию();
			НачатьТранзакцию();
		КонецЕсли;
		
		НЗ = РегистрыСведений.ПериодыПостроенияОтчетов.СоздатьНаборЗаписей();
		НЗ.Отбор.График.Установить(Выборка.График);
		НЗ.Отбор.Дата.Установить(Выборка.Дата);
		НЗ.Отбор.ДатаНачалаПериода.Установить(Выборка.ДатаНачалаПериода);
		
		НЗ.ОбменДанными.Загрузка = Истина;
		Если Выборка.Признак > 0 Тогда
			
			НоваяСтрока = НЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			НЗ.Записать(Ложь);
			
		Иначе
			
			НЗ.Записать(Истина);
			
		КонецЕсли;

	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	
КонецПроцедуры

Процедура УдалитьЗаписиДоДаты(График, ДатаНачала) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("График", График);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПериодыПостроенияОтчетов.График КАК График,
	|	ПериодыПостроенияОтчетов.Дата КАК Дата
	|ИЗ
	|	РегистрСведений.ПериодыПостроенияОтчетов КАК ПериодыПостроенияОтчетов
	|ГДЕ
	|	ПериодыПостроенияОтчетов.График = &График
	|	И ПериодыПостроенияОтчетов.Дата < &ДатаНачала
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыПостроенияОтчетов.График,
	|	ПериодыПостроенияОтчетов.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	График,
	|	Дата";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Сч = 0;
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		
		Сч = Сч + 1;
		Если Сч % 200 = 0 Тогда
			ЗафиксироватьТранзакцию();
			НачатьТранзакцию();
		КонецЕсли;
		
		НЗ = РегистрыСведений.ПериодыПостроенияОтчетов.СоздатьНаборЗаписей();
		НЗ.Отбор.График.Установить(Выборка.График);
		НЗ.Отбор.Дата.Установить(Выборка.Дата);
		
		НЗ.ОбменДанными.Загрузка = Истина;
		НЗ.Записать(Истина);
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция ТЧПериодов(График, ДатаНачала, ДатаОкончания)
	
	ТЧПериодов = Новый ТаблицаЗначений;
	//ТЧПериодов.Колонки.Добавить("Дата", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТЧПериодов.Колонки.Добавить("ДатаНачалаПериода", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТЧПериодов.Колонки.Добавить("ДатаОкончанияПериода", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));

	ДлинаПериодаВСек = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(График, "ДлинаПериодаВСек");
	Если НЕ ЗначениеЗаполнено(ДлинаПериодаВСек) Тогда
		Возврат ТЧПериодов;
	КонецЕсли;
	
	Если ДатаНачала >= ДатаОкончания Тогда
		Возврат ТЧПериодов;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		Возврат ТЧПериодов;
	КонецЕсли;

	ДатаДень = НачалоДня(ДатаНачала);
	ДатаПериода = ДатаДень;
	Пока ДатаПериода <= ДатаОкончания Цикл
		
		СтрокаПериодов = ТЧПериодов.Добавить();
		
		//СтрокаПериодов.Дата = ДатаДень;
		СтрокаПериодов.ДатаНачалаПериода = ДатаПериода;
		
		ДатаПериода = ДатаПериода + ДлинаПериодаВСек;
		//ДатаДень = НачалоДня(ДатаПериода);
		
		СтрокаПериодов.ДатаОкончанияПериода = ДатаПериода;
		
	КонецЦикла;
	
	Возврат ТЧПериодов;
	
КонецФункции

Функция ДлинаПериодаВСекВРегистре(График)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("График", График);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	ПериодыПостроенияОтчетов.ДатаНачалаПериода КАК ДатаНачалаПериода,
	|	ПериодыПостроенияОтчетов.ДатаОкончанияПериода КАК ДатаОкончанияПериода
	|ИЗ
	|	РегистрСведений.ПериодыПостроенияОтчетов КАК ПериодыПостроенияОтчетов
	|ГДЕ
	|	ПериодыПостроенияОтчетов.График = &График
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачалаПериода УБЫВ";
	
	ТЧДанных = Запрос.Выполнить().Выгрузить();
	
	Если ТЧДанных.Количество() < 1 Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат (ТЧДанных[0].ДатаОкончанияПериода - ТЧДанных[0].ДатаНачалаПериода);
	
КонецФункции

#КонецЕсли
